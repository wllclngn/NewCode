Difference at line 30:
  File 1:         Logger::getInstance().log("Invalid output folder path. Exiting.");
  File 2:         Logger::getInstance().log("Invalid input folder path. Exiting.");
Difference at line 48:
  File 1:     // Validate Temporary folder    std::string temp_folder_path;
  File 2:     // Validate Temporary folder
Difference at line 67:
  File 1:     // Check if the string contains '/' or '\'
  File 2:     // Get file paths
Difference at line 68:
  File 1:     std::string SysPathSlash;
  File 2:     std::vector<std::string> file_paths;
Difference at line 69:
  File 1: 
  File 2:     if (!FileHandler::get_file_paths(folder_path, file_paths)) {
Difference at line 70:
  File 1:     if (temp_folder_path.find('/') != std::string::npos) {
  File 2:         Logger::getInstance().log("ERROR: Failed to get file paths. Exiting.\n");
Difference at line 71:
  File 1:         SysPathSlash = "/";
  File 2:         return 1;
Difference at line 72:
  File 1:         Logger::getInstance().log("The string contains '/'. Assigned '/' to SysPathSlash.\n");
  File 2:     }
Difference at line 73:
  File 1:     } else if (temp_folder_path.find('\\') != std::string::npos) {
  File 2: 
Difference at line 74:
  File 1:         SysPathSlash = "\\";
  File 2:     // Map phase
Difference at line 75:
  File 1:         Logger::getInstance().log("The string contains '\\'. Assigned '\\' to SysPathSlash.\n");
  File 2:     std::vector<std::string> extracted_lines;
Difference at line 76:
  File 1:     }
  File 2:     for (const auto &file_path : file_paths) {
Difference at line 77:
  File 1: 
  File 2:         FileHandler::read_file(file_path, extracted_lines);
Difference at line 78:
  File 1:     // Prepare file paths
  File 2:     }
Difference at line 79:
  File 1:     std::string file_list_path = temp_folder_path + SysPathSlash + "fileNames.txt";
  File 2: 
Difference at line 80:
  File 1: 
  File 2:     Mapper mapper;
Difference at line 81:
  File 1:     // Handle input directory and create temp files
  File 2:     mapper.map_words(extracted_lines, temp_folder_path);
Difference at line 82:
  File 1:     if (!FileHandler::create_temp_log_file(folder_path, file_list_path) ||
  File 2: 
Difference at line 83:
  File 1:         !FileHandler::write_filenames_to_file(folder_path, file_list_path))
  File 2:     // Reduce phase
Difference at line 84:
  File 1:     {
  File 2:     std::vector<std::pair<std::string, int>> mapped_data;
Difference at line 85:
  File 1:         Logger::getInstance().log("ERROR: Failed to prepare temp files. Exiting.\n");
  File 2:     std::string mapped_file_path = temp_folder_path + "/mapped_temp.txt";
Difference at line 86:
  File 1:         return 1;
  File 2:     if (!FileHandler::read_mapped_data(mapped_file_path, mapped_data)) {
Difference at line 87:
  File 1:     }
  File 2:         Logger::getInstance().log("ERROR: Failed to read mapped data. Exiting.\n");
Difference at line 88:
  File 1: 
  File 2:         return 1;
Difference at line 89:
  File 1:     // Read file names from the temporary file
  File 2:     }
Difference at line 90:
  File 1:     std::vector<std::string> file_names;
  File 2: 
Difference at line 91:
  File 1:     if (!FileHandler::read_file(file_list_path, file_names))
  File 2:     Reducer reducer;
Difference at line 92:
  File 1:     {
  File 2:     reducer.reduce(mapped_data);
Difference at line 93:
  File 1:         Logger::getInstance().log("ERROR: Failed to read fileNames.txt. Exiting.\n");
  File 2: 
Difference at line 94:
  File 1:         return 1;
  File 2:     // Write outputs
Difference at line 95:
  File 1:     }
  File 2:     std::string output_file_path = output_folder_path + "/output.txt";
Difference at line 96:
  File 1: 
  File 2:     if (!FileHandler::write_output(output_file_path, reducer.get_reduced_data())) {
Difference at line 97:
  File 1:     // Map phase
  File 2:         Logger::getInstance().log("ERROR: Failed to write output file. Exiting.\n");
Difference at line 98:
  File 1:     std::vector<std::string> extracted_lines;
  File 2:         return 1;
Difference at line 99:
  File 1:     std::string temp_input_path = temp_folder_path + "/tempInput.txt";
  File 2:     }
Difference at line 100:
  File 1:     if (!FileHandler::extract_values_from_temp_input(extracted_lines, temp_input_path))
  File 2: 
Difference at line 101:
  File 1:     {
  File 2:     std::string summed_output_path = output_folder_path + "/output_summed.txt";
Difference at line 102:
  File 1:         Logger::getInstance().log("ERROR: Failed to extract lines from tempInput.txt. Exiting.\n");
  File 2:     if (!FileHandler::write_summed_output(summed_output_path, reducer.get_reduced_data())) {
Difference at line 103:
  File 1:         return 1;
  File 2:         Logger::getInstance().log("ERROR: Failed to write summed output file. Exiting.\n");
Difference at line 104:
  File 1:     }
  File 2:         return 1;
Difference at line 105:
  File 1: 
  File 2:     }
Difference at line 106:
  File 1:     Mapper mapper;
  File 2: 
Difference at line 107:
  File 1:     mapper.map_words(extracted_lines, temp_folder_path);
  File 2:     // Display results
Difference at line 108:
  File 1: 
  File 2:     Logger::getInstance().log("\n Process complete!\n");
Difference at line 109:
  File 1:     // Reduce phase
  File 2:     Logger::getInstance().log("  Mapped data: mapped_temp.txt\n");
Difference at line 110:
  File 1:     std::vector<std::pair<std::string, int>> mapped_data;
  File 2:     Logger::getInstance().log("\n  Word counts: output.txt\n");
Difference at line 111:
  File 1:     std::string mapped_file_path = temp_folder_path + "/mapped_temp.txt";
  File 2:     Logger::getInstance().log("\n Summed counts: output_summed.txt\n");
Difference at line 112:
  File 1:     if (!FileHandler::read_mapped_data(mapped_file_path, mapped_data))
  File 2: 
Difference at line 113:
  File 1:     {
  File 2:     return 0;
Difference at line 114:
  File 1:         Logger::getInstance().log("ERROR: Failed to read mapped data. Exiting.\n");
  File 2: }
Difference at line 115:
  File 1:         return 1;
  File 2: [No Line]
Difference at line 116:
  File 1:     }
  File 2: [No Line]
Difference at line 117:
  File 1: 
  File 2: [No Line]
Difference at line 118:
  File 1:     Reducer reducer;
  File 2: [No Line]
Difference at line 119:
  File 1:     reducer.reduce(mapped_data);
  File 2: [No Line]
Difference at line 120:
  File 1: 
  File 2: [No Line]
Difference at line 121:
  File 1:     // Write outputs
  File 2: [No Line]
Difference at line 122:
  File 1:     std::string output_file_path = output_folder_path + "/output.txt";
  File 2: [No Line]
Difference at line 123:
  File 1:     if (!FileHandler::write_output(output_file_path, reducer.get_reduced_data()))
  File 2: [No Line]
Difference at line 124:
  File 1:     {
  File 2: [No Line]
Difference at line 125:
  File 1:         Logger::getInstance().log("ERROR: Failed to write output file. Exiting.\n");
  File 2: [No Line]
Difference at line 126:
  File 1:         return 1;
  File 2: [No Line]
Difference at line 127:
  File 1:     }
  File 2: [No Line]
Difference at line 128:
  File 1: 
  File 2: [No Line]
Difference at line 129:
  File 1:     std::string summed_output_path = output_folder_path + "/output_summed.txt";
  File 2: [No Line]
Difference at line 130:
  File 1:     if (!FileHandler::write_summed_output(summed_output_path, reducer.get_reduced_data()))
  File 2: [No Line]
Difference at line 131:
  File 1:     {
  File 2: [No Line]
Difference at line 132:
  File 1:         Logger::getInstance().log("ERROR: Failed to write summed output file. Exiting.\n");
  File 2: [No Line]
Difference at line 133:
  File 1:         return 1;
  File 2: [No Line]
Difference at line 134:
  File 1:     }
  File 2: [No Line]
Difference at line 135:
  File 1: 
  File 2: [No Line]
Difference at line 136:
  File 1:     // Display results
  File 2: [No Line]
Difference at line 137:
  File 1:     Logger::getInstance().log("\n Process complete!\n");
  File 2: [No Line]
Difference at line 138:
  File 1:     Logger::getInstance().log("  Mapped data: mapped_temp.txt\n");
  File 2: [No Line]
Difference at line 139:
  File 1:     Logger::getInstance().log("\n  Word counts: output.txt\n");
  File 2: [No Line]
Difference at line 140:
  File 1:     Logger::getInstance().log("\n Summed counts: output_summed.txt\n");
  File 2: [No Line]
Difference at line 141:
  File 1: 
  File 2: [No Line]
Difference at line 142:
  File 1:     return 0;
  File 2: [No Line]
Difference at line 143:
  File 1: }
  File 2: [No Line]
Comparison complete. Differences were found.
